#include <iostream>                      
#include <unordered_map>               
using namespace std;                    

bool areIsomorphic(string s, string t) {           
    if (s.length() != t.length()) return false;    

    unordered_map<char, char> map_s_to_t;           
    unordered_map<char, char> map_t_to_s;  
    
    for (int i = 0; i < s.length(); i++) {          
    char c1 = s[i];                             
    char c2 = t[i];                             
        if (map_s_to_t.count(c1)) {                
            if (map_s_to_t[c1] != c2)            
                return false;                   
        } else {                                
            map_s_to_t[c1] = c2;                  
        }

        if (map_t_to_s.count(c2)) {             
            if (map_t_to_s[c2] != c1)            
                return false;                  
        } else {                                  
            map_t_to_s[c2] = c1;                   
        }
    }

    return true;                                  
}

int main() {                                  
    string s, t;                              
    cout << "Enter first string (s): ";           
    cin >> s;                                   

    cout << "Enter second string (t): ";         
    cin >> t;                                    

    if (areIsomorphic(s, t)) {                   
        cout << "Output: true (Strings are isomorphic)" << endl;   
    } else {                                 
        cout << "Output: false (Strings are not isomorphic)" << endl; 
    }

    return 0;                                 
}
